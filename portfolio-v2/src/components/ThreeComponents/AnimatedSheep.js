/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useFrame } from '@react-three/fiber';
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from 'three';

function getRandomColor() {
    let letters = '0123456789ABCDEF';
    let color = '#';
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
}

export default function Model({ ...props }) {
    const ref = useRef();
    const { nodes, materials, animations } = useGLTF(
        "/NEWSheepModelwAnimations3.gltf"
    );
    const { actions } = useAnimations(animations, ref);
    const randomColor = getRandomColor();

    {/* makes sheep rotate */}
    // useFrame((state, delta) => (ref.current.rotation.y += 0.01));

    // Upon click, changes color
    const [sheepColor, setSheepColor] = useState(randomColor);

    //list available sheep animation
    console.log(actions);

    //actions that work: 
    /* 
        NEWSheepModelwAnimations3.gltf
        -zzzaTPose
        -HeadDown
        -Eating
        -HeadUp
        -Walking
        -Spawning
    */

    //animation trigger and moving sheep
    function sheepRandomAnimations() {
        actions.Walking.play();
    }

    function sheepRandomMovements() {
        ref.current.position.x += 0.00;
    }

    //animation trigger
    useEffect(() => {
        sheepRandomAnimations()
    })

    //move sheep location, rotation
    useFrame((state, delta) => (
        sheepRandomMovements()
    ));

    //make sheep move


 
    return (
        <group ref={ref} {...props} dispose={null}>
            <group name="Scene" >
                <group name="Armature" scale={1}>
                    <primitive object={nodes.Bone} />
                    <skinnedMesh
                        name="Sheep"
                        geometry={nodes.Sheep.geometry}
                        /* material={materials.Material} */
                        skeleton={nodes.Sheep.skeleton} >
                        <meshStandardMaterial color={sheepColor} />
                    </skinnedMesh>
                </group>
                <mesh 
                    geometry={nodes.Sheep.geometry}
                    scale={1.25}
                    onClick={() => setSheepColor(sheepColor => getRandomColor())}
                >
                    <meshStandardMaterial
                    transparent={true}
                    opacity={0.75} />
                </mesh>
            </group>
        </group>
    );
}


useGLTF.preload("/sheepModelwAnimations.gltf");