/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

/* skeleton utils */
import { SkeletonUtils } from "three-stdlib";
import { useGraph } from "@react-three/fiber";

/* future me, confused what's going on? worry not, reference this bad boi: https://codesandbox.io/s/gltf-animations-re-used-k8phr?file=/src/Model.js:598-635 */

export default function Model(props) {
  const group = useRef();
  const { materials, animations, scene } = useGLTF(
    "/NEWSheepModelwAnimations3.gltf"
  );
  const { actions } = useAnimations(animations, group);

  // Skinned meshes cannot be re-used in threejs without cloning them
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])
  // useGraph creates two flat object collections for nodes and materials
  const { nodes } = useGraph(clone)

  //receive sheep color
  const sheepColor = props.color;
  console.log(props);


  return (
    <>
      <group ref={group} {...props} dispose={null}>
        <group name="Scene">
          <group name="Armature">
            <primitive object={nodes.Bone} />
            <skinnedMesh 
              name="Sheep"
              geometry={nodes.Sheep.geometry}
              // material={materials["Material.001"]}
              skeleton={nodes.Sheep.skeleton}
            >
              <meshStandardMaterial color={sheepColor} />
            </skinnedMesh>
          </group>
        </group>
      </group>
    </>
  );
}

useGLTF.preload("/NEWSheepModelwAnimations3.gltf");